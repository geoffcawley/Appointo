node('master'){
    stage('import'){
		try {
			git 'https://github.com/geoffcawley/Appointo.git'
		} catch(e) {
			slackSend(message:'Appointo failed import')
			throw e
		}
    }   
    
    stage('build') {
		try {
			dir('Appointo') {
//				bat 'msbuild restore'
				bat 'nuget restore'
			}
			dir('Appointo\\Appointo.Entity') {
//				bat 'msbuild restore'
//				bat 'nuget restore Appointo.Entity.csproj'
				bat 'msbuild /t:clean,build Appointo.Entity.csproj'
			}

			dir('Appointo\\Appointo.Library') {
//				bat 'msbuild restore'
//				bat 'nuget restore Appointo.Library.csproj'
				bat 'msbuild /t:clean,build Appointo.Library.csproj'
			}

			dir('Appointo\\Appointo.Web') {
//				bat 'msbuild restore'
//				bat 'nuget restore Appointo.Web.csproj'
				bat 'msbuild /t:clean,build Appointo.Web.csproj'
			}

			dir('Appointo\\Appointo.Tests')	{
//				bat 'msbuild restore'
//				bat 'nuget restore Appointo.Tests.csproj'
				bat 'msbuild /t:clean,build Appointo.Tests.csproj'
			}

			/*
			dir('Angular') {
				bat 'npm install'
				bat 'ng build'
			}
			*/

		} catch(e) {
			def msg = "${buildStatus}: `${env.JOB_NAME}` #${env.BUILD_NUMBER}:\n${env.BUILD_URL}"
//			slackSend(message:'Appointo build failure')
			slackSend(message: msg)
			throw e
		}
    }

    stage('analyze') {
		try {
			dir('Appointo') {
				bat 'C:\\Tools\\SonarQube\\SonarQube.Scanner.MSBuild.exe begin /k:appointo'
				bat 'msbuild /t:build Appointo.Web\\Appointo.Web.csproj'
				bat 'C:\\Tools\\SonarQube\\SonarQube.Scanner.MSBuild.exe end'
			}
		} catch(e) {
			slackSend(message:'Appointo analysis failure')
			throw e
		}
    }

	stage('test') {
		try {
			dir('Appointo\\Appointo.Tests')
			{
				bat 'dotnet restore'
				bat 'msbuild /t:build Appointo.Tests.csproj'
				bat 'dotnet test'
			}
		} catch(e) {
			slackSend(message:'Appointo test failure')
			throw e
		}
	}

    stage('package') {
		try {
			dir('Appointo') {
				bat 'dotnet restore Appointo.Web\\Appointo.Web.csproj'
				bat 'dotnet publish Appointo.Web\\Appointo.Web.csproj --framework net471 --output ../Package'
			}
		} catch(e) {
			slackSend(message:'Appointo package failure')
			throw e
		}
    }
    
    stage('deploy') {
		try {
			bat 'dotnet build ./Appointo/Appointo.Web/Appointo.Web.csproj /p:DeployOnBuild=true /p:PublishProfile=publish'
//			bat '"C:\\Program Files (x86)\\IIS\\Microsoft Web Deploy V3\\msdeploy.exe" -verb:sync -source:iisApp="C:\\Program Files (x86)\\Jenkins\\workspace\\appointo-pipe\\Appointo\\Package\\" -dest:iisApp="Default Web Site/appointo",computername=ec2-18-216-243-172.us-east-2.compute.amazonaws.com,username=Administrator,password="ej@wV)&;.of8&NXxQrgWX@MI6DuD8h9r"  -enableRule:AppOffline'
			bat '"C:\\Program Files (x86)\\IIS\\Microsoft Web Deploy V3\\msdeploy.exe" -verb:sync -source:iisApp="C:\\Program Files (x86)\\Jenkins\\workspace\\appointo-pipe\\Appointo\\Package\\" -dest:iisApp="Default Web Site/appointo",computername=https://ec2-18-216-243-172.us-east-2.compute.amazonaws.com:8172/msdeploy.axd,username="EC2AMAZ-TPHM1T3\\Administrator",password="ej@wV)&;.of8&NXxQrgWX@MI6DuD8h9r",authType=basic -allowuntrusted -enableRule:AppOffline'
			slackSend(message:'Everything worked out ok')
		} catch(e) {
			slackSend(message:'Appointo deploy failure')
			throw e
		}
    }
}